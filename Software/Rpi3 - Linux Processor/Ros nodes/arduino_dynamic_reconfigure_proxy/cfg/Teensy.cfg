#!/usr/bin/env python
PACKAGE = "arduino_dynamic_reconfigure_proxy"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

# Emergency switch
gen.add("Motor_Master_Switch",   bool_t,   0, "Switch to turn off or on the motors",  False)
# Motors manual control
gen.add("motor_1", double_t, 0, "Percentage power of the Front Right motor",    0, 0,   100)
gen.add("motor_2", double_t, 0, "Percentage power of the Back Right motor",    0, 0,   100)
gen.add("motor_3", double_t, 0, "Percentage power of the Back Left motor",    0, 0,   100)
gen.add("motor_4", double_t, 0, "Percentage power of the Front Left motor",    0, 0,   100)
# Controller switch
gen.add("Controller_ON_OFF",   bool_t,   0, "Switch between manual control and PID",  False)
# Set points
gen.add("Roll_SetPoint", double_t, 0, "Controller Setpoint for Pitch Angle",    0, -45,   45)
gen.add("Pitch_SetPoint", double_t, 0, "Controller Setpoint for Roll Angle",    0, -45,   45)
gen.add("Yaw_SetPoint", double_t, 0, "Controller Setpoint for Yaw Angle",    0, -45,   45)
# PID gains
gen.add("Pitch_Kp", double_t, 0, "Kp gain for the Pitch PID control",    0, 0,  10)
gen.add("Pitch_Kd", double_t, 0, "Kd gain for the Pitch PID control",    0, 0,   10)
gen.add("Pitch_Ki", double_t, 0, "Ki gain for the Pitch PID control",    0, 0,  10)

gen.add("Roll_Kp", double_t, 0, "Kp gain for the Roll PID control",    0, 0,  10)
gen.add("Roll_Kd", double_t, 0, "Kd gain for the Roll PID control",    0, 0,   10)
gen.add("Roll_Ki", double_t, 0, "Ki gain for the Roll PID control",    0, 0,  10)

gen.add("Yaw_Kp", double_t, 0, "Kp gain for the Yaw PID control",    0, 0,  10)
gen.add("Yaw_Kd", double_t, 0, "Kd gain for the Yaw PID control",    0, 0,   10)
gen.add("Yaw_Ki", double_t, 0, "Ki gain for the Yaw PID control",    0, 0,  10)

exit(gen.generate(PACKAGE, "arduino_dynamic_reconfigure_proxy", "Teensy"))
